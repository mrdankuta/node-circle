version: 2.1

orbs:
  aws-cli: circleci/aws-cli@4.1.3

jobs:
  build-push:
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout
      - setup_remote_docker
      - aws-cli/setup:
          region: us-east-1
          role_arn: arn:aws:iam::058264355882:role/circle-ecs-role

      # Build and push Docker image
      - run:
          name: Build and push Docker image
          command: |
            echo $DOCKER_HUB_PASSWORD | docker login -u $DOCKER_HUB_USERNAME --password-stdin
            docker build -t $DOCKER_HUB_USERNAME/makinode-app-circle:$CIRCLE_SHA1 -f nodeapp/Dockerfile .
            docker push $DOCKER_HUB_USERNAME/makinode-app-circle:$CIRCLE_SHA1

      # Download, Update, and Register ECS Task Definition
      - run:
          name: Update ECS Task Definition
          command: |
            # Get the latest revision of the task definition
            LATEST_REVISION=$(aws ecs list-task-definitions --family-prefix makinode-app-task --sort DESC --max-items 1 | jq -r '.taskDefinitionArns[0]')

            # Download the current task definition
            TASK_DEFINITION=$(aws ecs describe-task-definition --task-definition $LATEST_REVISION)
            
            # Extract the task definition family name
            TASK_DEFINITION_FAMILY=$(echo $TASK_DEFINITION | jq -r '.family')

            # Update the container image in the task definition
            UPDATED_CONTAINER_DEF=$(echo $TASK_DEFINITION | jq --arg image "$DOCKER_HUB_USERNAME/makinode-app-circle:$CIRCLE_SHA1" '.containerDefinitions[0].image = $image')

            # Create the updated task definition JSON
            NEW_TASK_DEFINITION=$(echo $TASK_DEFINITION | jq --argjson task_definition "$TASK_DEFINITION" --arg image "$DOCKER_HUB_USERNAME/makinode-app-circle:$CIRCLE_SHA1" '{
              "family": "$TASK_DEFINITION_FAMILY",
              "taskRoleArn": ($task_definition.taskRoleArn // ""),
              "executionRoleArn": ($task_definition.executionRoleArn // ""),
              "networkMode": ($task_definition.networkMode // "awsvpc"),
              "containerDefinitions": [
                {
                  "image": $image,
                  "name": ($task_definition.containerDefinitions[0].name // "makinode-app-container"),
                  "cpu": ($task_definition.containerDefinitions[0].cpu // 0),
                  "portMappings": ($task_definition.containerDefinitions[0].portMappings // []),
                  "essential": ($task_definition.containerDefinitions[0].essential // true),
                  "environment": ($task_definition.containerDefinitions[0].environment // []),
                  "mountPoints": ($task_definition.containerDefinitions[0].mountPoints // []),
                  "volumesFrom": ($task_definition.containerDefinitions[0].volumesFrom // []),
                  "systemControls": ($task_definition.containerDefinitions[0].systemControls // [])
                }
              ],
              "volumes": ($task_definition.volumes // []),
              "placementConstraints": ($task_definition.placementConstraints // []),
              "requiresCompatibilities": ($task_definition.requiresCompatibilities // ["FARGATE"]),
              "cpu": (($task_definition.cpu // "256") | tostring),
              "memory": (($task_definition.memory // "512") | tostring)
            }')

            # Register the updated task definition
            aws ecs register-task-definition --cli-input-json "$NEW_TASK_DEFINITION"

      # Update ECS Service
      - run:
          name: Update ECS Service
          command: |
            # Update the ECS service with the new task definition
            aws ecs update-service --cluster makinode-app-cluster --service makinode-app-service --task-definition $LATEST_REVISION
            aws ecs wait services-stable --cluster makinode-app-cluster --services makinode-app-service

workflows:
  build-and-push:
    jobs:
      - build-push:
          context: aws-docker-context